<div class="container">
	@using Client.Components.CustomInputText
	
	<h1>Witamy ponownie !</h1>
	<EditForm  Model="@loginModel" OnValidSubmit="HandleValidSubmit" class="form">
		<DataAnnotationsValidator />

		<CustomInputText Description="Email" @bind-Value="@loginModel.Email" />

		<CustomInputText Description="Hasło" @bind-Value="@loginModel.Password" IsPassword=true />
		<ValidationSummary />
		<Button IsSubmit=true Content="Zaloguj się !" />
		@if (LoginFailed)
		{
			<p class="login-error">Failed to log in check your email and password !</p>
		}
	</EditForm>
</div>
@if (IsLoading)
{
	<Loading />
}

@code {
	[Inject]
	public IDataService _dataService { get; set; } = null!;

	[Inject]
	public NavigationManager NavigationManager { get; set; } = null!;

	public bool IsLoading { get; set; } = false;
	public bool LoginFailed { get; set; } = false;

	LoginModel loginModel = new();

	private async Task HandleValidSubmit()
	{
		LoginFailed = false;
		IsLoading = true;

		var authSucces = await _dataService.LoginAsync(loginModel.Email, loginModel.Password);

		IsLoading = false;

		if(authSucces)
		{
			NavigationManager.NavigateTo("/dashboard");
		}
		else
		{
			LoginFailed = true;
		}
	}
}
