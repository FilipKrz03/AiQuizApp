@using Client.Components.QuizesContainer
@using Client.Components.LoginForm
@using Client.Components.CreateQuizForm

@inject IDataService _dataService
@inject IModalService _modalService

@if (!IsLoading)
{
	<div class="container">
		<div class="main-info">
			<p>
				Stworzyłeś
				<span class="bolder-font">
					@Quizes.Count() quiz@(GetQuizesWordSufix()) !
				</span>
			</p>
			<Button Content="Stwórz quiz" Secondary=true OnClickCallback="ShowCreateQuizModal" />
		</div>
		<QuizesContainer Quizes="Quizes" AreQuizesLimitedToUser=true />
	</div>
}
@if (IsLoading)
{
	<Loading />
}

@code {

	public IEnumerable<QuizBasicResponseDto> Quizes { get; set; } = [];
	public bool IsLoading { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		IsLoading = true;
		Quizes = await _dataService.GetUserQuizesAsync();
		IsLoading = false;
	}

	private void ShowCreateQuizModal()
	{
		var modal = _modalService.Show<CreateQuizForm>("Stworz quiz !");
	}

	private string GetQuizesWordSufix()
	{
		var quizesCount = Quizes.Count();

		if (quizesCount == 1) return "";
		if (quizesCount > 1 && quizesCount < 5) return "y";

		return "ów";
	}
}
