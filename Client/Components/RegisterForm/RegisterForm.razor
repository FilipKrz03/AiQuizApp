<div class="container">
	<h1>Witamy !</h1>
	<EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit" class="form">
		<DataAnnotationsValidator />
		<div class="input">
			<label>Email</label>
			<InputText @bind-Value="registerModel.Email" />
		</div>
		<div class="input">
			<label>Hasło</label>
			<InputText type="password" @bind-Value="registerModel.Password" />
		</div>
		<div class="input">
			<label>Powtórż hasło</label>
			<InputText type="password" @bind-Value="registerModel.RepeatPassword" />
		</div>
		<ValidationSummary />
		<Button IsSubmit=true Content="Zarejstruj się !" />
	</EditForm>
	@if (SuccesfullRegister)
	{
		<p class="register-succes">Account created !</p>
	}
	@if (FailureRegister)
	{
		<p class="register-failure">Provided email already exist</p>
	}
</div>
@if(IsLoading)
{
	<Loading />
}


@code {
	[Inject]
	public IDataService _dataService { get; set; } = null!;

	public bool SuccesfullRegister { get; set; } = false;
	public bool FailureRegister { get; set; } = false;

	public bool IsLoading { get; set; } = false;

	RegisterModel registerModel = new();

	private async Task HandleValidSubmit()
	{
		IsLoading = true;

		var result = await _dataService.RegisterAsync(registerModel.Email, registerModel.Password);

		if (result == System.Net.HttpStatusCode.OK)
		{
			SuccesfullRegister = true;
			FailureRegister = false;
		}
		else
		{
			FailureRegister = true;
			SuccesfullRegister = false;
		}

		IsLoading = false;
	}
}
